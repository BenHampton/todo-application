{"ast":null,"code":"var _jsxFileName = \"/Users/benhampton/Documents/git/transactly-weekend-challenges/todo-app/src/modules/Pokemon/Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector } from \"react-redux\"; // import { selectPokemonList } from '../../features/pokemonSlice'\n\nimport PokemonItem from './components/PokemonItem';\nimport Input from './components/Input';\nimport './Pokemon.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = () => {\n  _s();\n\n  const selectPokemon = useSelector(state => state.pokemonReducer);\n  console.log('selectPokemon', selectPokemon);\n  useEffect(() => {\n    console.log('userEffect');\n    console.log('pokemonList', selectPokemon.pokemonList); //TODO fetch names of pokemon for autocomplete input text\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-container\",\n      children: selectPokemon.pokemonList.map(pokemon => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PokemonItem, {\n          id: pokemon.id,\n          name: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this)\n      }, pokemon.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pokemon, \"wnVnsAJN1Qhx+BPoi8DmzX/jNxs=\", false, function () {\n  return [useSelector];\n});\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["/Users/benhampton/Documents/git/transactly-weekend-challenges/todo-app/src/modules/Pokemon/Pokemon.js"],"names":["React","useEffect","useSelector","PokemonItem","Input","Pokemon","selectPokemon","state","pokemonReducer","console","log","pokemonList","map","pokemon","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,eAAP;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAMC,aAAa,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAAjC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,aAA7B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,aAAa,CAACK,WAAzC,EAFY,CAGZ;AACH,GAJQ,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAEML,aAAa,CAACK,WAAd,CAA0BC,GAA1B,CAA8BC,OAAO,iBAC/B;AAAA,+BACI,QAAC,WAAD;AACI,UAAA,EAAE,EAAGA,OAAO,CAACC,EADjB;AAEI,UAAA,IAAI,EAAGD,OAAO,CAACE;AAFnB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAWF,OAAO,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,cADN;AAFN;AAAA;AAAA;AAAA;AAAA,YAFJ,eAcI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA7BD;;GAAMT,O;UAEoBH,W;;;KAFpBG,O;AA8BN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector } from \"react-redux\"\n// import { selectPokemonList } from '../../features/pokemonSlice'\nimport PokemonItem from './components/PokemonItem'\nimport Input from './components/Input'\nimport './Pokemon.css'\n\nconst Pokemon = () => {\n\n    const selectPokemon = useSelector(state => state.pokemonReducer )\n    console.log('selectPokemon', selectPokemon)\n\n    useEffect(() => {\n        console.log('userEffect' )\n        console.log('pokemonList', selectPokemon.pokemonList)\n        //TODO fetch names of pokemon for autocomplete input text\n    }) \n\n    return (\n        <div className='container'>\n            <h1>Pokemon</h1>\n            <div className=\"pokemon-container\">\n                {/* add presentataion component */}\n                { selectPokemon.pokemonList.map(pokemon => (\n                        <div key={ pokemon.id }>\n                            <PokemonItem \n                                id={ pokemon.id }\n                                name={ pokemon.name }\n                            />\n                        </div>\n                    )) \n                }\n            </div>\n            <Input/>\n        </div>\n    )\n}\nexport default Pokemon\n"]},"metadata":{},"sourceType":"module"}