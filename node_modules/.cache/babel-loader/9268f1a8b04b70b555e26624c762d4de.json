{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  todoList: []\n};\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    saveTodo: (state, action) => {\n      state.todoList.push(action.payload);\n    },\n    setCheck: (state, action) => {\n      state.todoList.map(todo => {\n        if (action.payload === todo.date) {\n          todo.done = !todo.done;\n        }\n      });\n    },\n    removeItem: (state, action) => {\n      state.todoList.splice(action.payload, 1);\n    }\n  }\n});\nexport const {\n  saveTodo,\n  setCheck,\n  removeItem\n} = todoSlice.actions; // export const selectTodoList = state =>  state.todos.todoList\n\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/Users/benhampton/Documents/git/transactly-weekend-challenges/todo-app/src/features/todoSlice.js"],"names":["createSlice","initialState","todoList","todoSlice","name","reducers","saveTodo","state","action","push","payload","setCheck","map","todo","date","done","removeItem","splice","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;AAIA,MAAMC,SAAS,GAAGH,WAAW,CAAC;AAC1BI,EAAAA,IAAI,EAAE,OADoB;AAE1BH,EAAAA,YAF0B;AAG1BI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B;AACH,KAHK;AAKNC,IAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACL,QAAN,CAAeU,GAAf,CAAoBC,IAAI,IAAM;AAC1B,YAAIL,MAAM,CAACE,OAAP,KAAmBG,IAAI,CAACC,IAA5B,EAAkC;AAC9BD,UAAAA,IAAI,CAACE,IAAL,GAAY,CAACF,IAAI,CAACE,IAAlB;AACH;AACJ,OAJD;AAKH,KAXK;AAaNC,IAAAA,UAAU,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACL,QAAN,CAAee,MAAf,CAAsBT,MAAM,CAACE,OAA7B,EAAsC,CAAtC;AACH;AAfK;AAHgB,CAAD,CAA7B;AAsBA,OAAO,MAAM;AAAEJ,EAAAA,QAAF;AAAYK,EAAAA,QAAZ;AAAsBK,EAAAA;AAAtB,IAAqCb,SAAS,CAACe,OAArD,C,CACP;;AACA,eAAef,SAAS,CAACgB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    todoList: []\n}\n\nconst todoSlice = createSlice({\n    name: 'todos',\n    initialState,\n    reducers: {\n        saveTodo: (state, action) => {\n            state.todoList.push(action.payload)\n        },\n\n        setCheck: (state, action) => {\n            state.todoList.map( todo  =>  {\n                if (action.payload === todo.date) {\n                    todo.done = !todo.done\n                }\n            })\n        },\n\n        removeItem: (state, action) => {\n            state.todoList.splice(action.payload, 1)\n        }\n    }\n})\n\nexport const { saveTodo, setCheck, removeItem } = todoSlice.actions\n// export const selectTodoList = state =>  state.todos.todoList\nexport default todoSlice.reducer"]},"metadata":{},"sourceType":"module"}